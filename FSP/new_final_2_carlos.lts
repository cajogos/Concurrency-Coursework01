const MAX = 4
range TOTAL = 0..MAX
const TRANSACTION_VALUE = 1

// set EXTRAS = { get[TOTAL], put[TOTAL] }

STUDENT = (
    acquire -> get[cur : TOTAL] -> (
        when(cur > TRANSACTION_VALUE) withdraw -> put[cur - TRANSACTION_VALUE] -> release -> STUDENT
      | when(cur + TRANSACTION_VALUE <= MAX) deposit -> put[cur + TRANSACTION_VALUE] -> release -> STUDENT
      | cancel -> put[cur] -> release -> STUDENT
    )
).

LOAN_COMPANY = (
    acquire -> get[cur : TOTAL] -> (
        when(cur + TRANSACTION_VALUE <= MAX) deposit -> put[cur + TRANSACTION_VALUE] -> release -> LOAN_COMPANY
      | cancel -> put[cur] -> release -> LOAN_COMPANY
    )
).

UNIVERSITY = (
    acquire -> get[cur : TOTAL] -> (
        when(cur > TRANSACTION_VALUE) withdraw -> put[cur - TRANSACTION_VALUE] -> release -> UNIVERSITY
      | cancel -> put[cur] -> release -> UNIVERSITY
    )
).

BANK_ACCOUNT(START_BAL = 1) = ACCOUNT[START_BAL], ACCOUNT[cur : TOTAL] = (
    acquire -> get[cur] -> put[new : TOTAL] -> release -> ACCOUNT[new]
).

|| RESOURCE = (
       rik : STUDENT
    || company : LOAN_COMPANY
    || uni: UNIVERSITY
    || { rik, company, uni } :: BANK_ACCOUNT(2)
).